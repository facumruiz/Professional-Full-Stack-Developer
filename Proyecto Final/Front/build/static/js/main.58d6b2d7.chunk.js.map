{"version":3,"sources":["logo.svg","Components/Producto.js","Containers/Home.js","Components/ButtonWithLoading.js","Components/FormGroup.js","Containers/Login.js","Containers/Registro.js","Layout/Menu.js","Containers/ProductoDetalle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Producto","props","Card","style","margin","marginBottom","Body","Img","width","variant","Title","data","name","Home","state","productos","subtitulo","loading","fetch","then","res","json","result","console","log","setState","error","Container","this","map","producto","Component","ButtonWithLoading","Button","type","Spinner","animation","size","className","text","styles","errors","backgroundColor","noError","FormGroup","Form","Group","controlId","Label","label","Control","placeholder","value","onChange","change","Text","Login","login","history","useHistory","useState","user","password","form","setForm","setLoading","handleChange","e","target","preventDefault","onSubmit","method","headers","body","JSON","stringify","localStorage","setItem","token","push","Registro","setError","Menu","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","opcion","Link","as","to","path","inline","FormControl","ProductoDetalle","match","params","App","modificarOpcionesMenu","opcionesMenu","cambiarTitulo","titulo","getItem","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.58d6b2d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Card,Button } from 'react-bootstrap';\r\nfunction Producto(props){\r\n    return(\r\n        \r\n        <Card style={{ margin:'auto',marginBottom:'10px'}}>\r\n         <Card.Body>\r\n            <Card.Img style={{ width: '200px' }} variant=\"top\"  />\r\n            <Card.Title>{props.data.name}</Card.Title>\r\n            \r\n            \r\n            \r\n            \r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Producto","import React,{Component} from 'react'\r\nimport Producto from '../Components/Producto'\r\nimport {Container} from 'react-bootstrap'\r\n\r\nclass Home extends Component{\r\n    constructor(){\r\n        super()\r\n        //Declarar el estado\r\n        this.state = {\r\n            productos:[],\r\n            subtitulo:\"Dsdas\",\r\n            loading:true\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"http://localhost:3001/productos\")\r\n        .then(res=>res.json())\r\n        .then(\r\n            (result)=>{\r\n                console.log(result)\r\n                this.setState({\r\n                    productos:result,\r\n                    loading:false\r\n                })\r\n            },\r\n            (error)=>{\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <Container>\r\n                \r\n                {\r\n                    this.state.loading &&\r\n                    <div>Loading ...</div>\r\n                }\r\n                {\r\n                    !this.state.loading &&\r\n                    <div>\r\n                        {this.state.productos.map(producto=><Producto data={producto} />)}\r\n                    </div>\r\n                }\r\n                \r\n                \r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport {Button,Spinner} from 'react-bootstrap'\r\nfunction ButtonWithLoading(props){\r\n    return(\r\n        <Button variant=\"primary\" type=\"submit\">\r\n            {props.loading && \r\n                <Spinner animation=\"border\" size=\"sm\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            }\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ButtonWithLoading","import React from 'react';\r\nimport {Form} from 'react-bootstrap'\r\n\r\n\r\nconst styles = {\r\n    errors:{\r\n        backgroundColor:'red'\r\n    },\r\n    noError:{\r\n        backgroundColor:'none'\r\n    }\r\n}\r\nfunction FormGroup(props){\r\n\r\n    return(\r\n           <Form.Group controlId=\"formBasicName\">\r\n                <Form.Label>{props.label}</Form.Label>\r\n                <Form.Control type={props.type} placeholder={props.placeholder} name={props.name} value={props.value} onChange={props.change} style={(props.errors?styles.errors:styles.noError)}/>\r\n                {props.errors && \r\n                    <Form.Text className=\"text-muted\" >\r\n                        {props.errors}\r\n                    </Form.Text>\r\n                }\r\n            </Form.Group>\r\n        \r\n    )\r\n}\r\n\r\nexport default FormGroup","import React, {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Form,Container} from 'react-bootstrap'\r\nimport ButtonWithLoading from '../Components/ButtonWithLoading'\r\nimport FormGroup from '../Components/FormGroup'\r\nfunction Login({login}){\r\n    const history = useHistory();\r\n    const [form,setForm] = useState({user:'',password:''})\r\n    const [errors,setError] = useState({user:'',password:''})\r\n    const [loading,setLoading] = useState(false)\r\n    console.log(form)\r\n    const handleSubmit = (e)=>{\r\n        console.log(form)\r\n       \r\n        setLoading(true)\r\n        \r\n        fetch(\"http://localhost:3001/usuarios/login\",{\r\n            method:'POST',\r\n            headers:{\r\n                'content-type':'application/json'/*,\r\n                'x-access-token':localStorage.getItem(\"token\")*/\r\n            },\r\n            body:JSON.stringify(form)\r\n        })\r\n        .then(res=>res.json())\r\n        .then(\r\n            (result)=>{\r\n                console.log(result)\r\n                localStorage.setItem('token',result.token)\r\n                login(true);\r\n                history.push(\"/\")\r\n                setLoading(false)\r\n            },\r\n            (error)=>{\r\n                console.log(error)\r\n                setLoading(false)\r\n            }\r\n        )\r\n        e.preventDefault();\r\n    }\r\n    const handleChange = (e)=>{\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]:e.target.value}\r\n        )\r\n        e.preventDefault();\r\n    }\r\n    return(\r\n        <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup label={'Usuario'} type={'text'} placeholder={'Ingrese su usuario'} name={'user'} value={form.user} change={handleChange}/>\r\n\r\n                <FormGroup label={'Contraseña'} type={'password'} placeholder={'Ingrese su password'} name={'password'} value={form.password} change={handleChange}/>\r\n\r\n                <ButtonWithLoading text={'Ingresar'} loading={loading} />\r\n                \r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login","import React, {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Form,Container} from 'react-bootstrap'\r\nimport ButtonWithLoading from '../Components/ButtonWithLoading'\r\nimport FormGroup from '../Components/FormGroup'\r\nfunction Registro({data}){\r\n    const history = useHistory();\r\n    const [form,setForm] = useState({name:'',user:'',password:''})\r\n    const [errors,setError] = useState({name:'',user:'',password:''})\r\n    const [loading,setLoading] = useState(false)\r\n    console.log(form)\r\n    const handleSubmit = (e)=>{\r\n        console.log(form)\r\n        if(form.name==\"\"){\r\n            setError({\r\n                ...errors,\r\n                name:'El nombre es obligatorio'\r\n            })\r\n        }\r\n        setLoading(true)\r\n        \r\n        fetch(\"http://localhost:3001/usuarios/registro\",{\r\n            method:'POST',\r\n            headers:{\r\n                'content-type':'application/json'\r\n            },\r\n            body:JSON.stringify(form)\r\n        })\r\n        .then(res=>res.json())\r\n        .then(\r\n            (result)=>{\r\n                console.log(result)\r\n                history.push(\"/registro\")\r\n                setLoading(false)\r\n            },\r\n            (error)=>{\r\n                console.log(error)\r\n                setLoading(false)\r\n            }\r\n        )\r\n        e.preventDefault();\r\n    }\r\n    const handleChange = (e)=>{\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]:e.target.value}\r\n        )\r\n        e.preventDefault();\r\n    }\r\n    return(\r\n        <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup label={'Nombre'} type={'text'} placeholder={'Ingrese su nombre'} name={'name'} value={form.name} change={handleChange} errors={errors.name}/>\r\n                \r\n                <FormGroup label={'Usuario'} type={'text'} placeholder={'Ingrese su usuario'} name={'user'} value={form.user} change={handleChange}/>\r\n\r\n                <FormGroup label={'Contraseña'} type={'password'} placeholder={'Ingrese su password'} name={'password'} value={form.password} change={handleChange}/>\r\n\r\n                <ButtonWithLoading text={'Registrarse'} loading={loading} />\r\n                \r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Registro","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Navbar,  Nav,Form,Button,FormControl} from 'react-bootstrap';\r\nfunction Menu({data}){\r\n    return(\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                {data.map(opcion=><Nav.Link as={Link} to={opcion.path}>{opcion.label}</Nav.Link>)}\r\n            </Nav>\r\n            <Form inline>\r\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                <Button variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n            \r\n    )\r\n}\r\n\r\nexport default Menu","import React,{Component} from 'react'\r\n\r\nclass ProductoDetalle extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        console.log(this.props.match.params.id)\r\n       \r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                Producto Detalle\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductoDetalle","import React,{Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Home from './Containers/Home'\r\nimport Login from './Containers/Login'\r\nimport Registro from './Containers/Registro'\r\nimport {BrowserRouter,Route} from \"react-router-dom\"\r\nimport Menu from './Layout/Menu'\r\nimport ProductoDetalle from './Containers/ProductoDetalle';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n      super()\r\n      this.state = {\r\n          titulo:\"Home\",\r\n          opcionesMenu:[]\r\n      }\r\n      \r\n  }\r\n  componentDidMount(){\r\n    if(localStorage.getItem(\"token\")){\r\n      this.modificarOpcionesMenu(true)\r\n    }else{\r\n      this.modificarOpcionesMenu(false)\r\n    }\r\n  }\r\n  modificarOpcionesMenu = (login)=>{\r\n    if(login){\r\n      this.setState({\r\n        opcionesMenu:[\r\n        {\r\n          \"path\":\"/\",\r\n          \"label\":\"Home\"\r\n        }\r\n      ]})\r\n    }else{\r\n      this.setState({\r\n        opcionesMenu:[\r\n        {\r\n          \"path\":\"/\",\r\n          \"label\":\"Home\"\r\n        },\r\n        {\r\n          \"path\":\"/login\",\r\n          \"label\":\"Login\"\r\n        },\r\n        {\r\n          \"path\":\"/registro\",\r\n          \"label\":\"Registro\"\r\n        }\r\n      ]})\r\n    }\r\n  }\r\n  cambiarTitulo = (e)=>{\r\n      this.setState({\r\n        titulo:\"Inicio\"\r\n      })  \r\n  }\r\n  \r\n  render(){\r\n    return (\r\n        <>\r\n          <BrowserRouter>\r\n            <Route component={()=><Menu data={this.state.opcionesMenu} />} />\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/login\" exact component={()=><Login login={this.modificarOpcionesMenu} />} />\r\n            <Route path=\"/registro\" exact component={Registro} />\r\n            <Route path=\"/producto/:id\" exact component={ProductoDetalle} />\r\n          </BrowserRouter>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}